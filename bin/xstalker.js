// Generated by CoffeeScript 1.8.0

/*
 *
 * This simple server loads events into a beanstalkd queue
 *
 */

(function() {
  var beanstalkClient, beanstalkHost, beanstalkPort, dataAPIVersion, http, insertJobIntoBeanstalk, insightHost, insightPort, socket;

  insightHost = process.env.INSIGHT_HOST || '127.0.0.1';

  insightPort = process.env.INSIGHT_PORT || 3000;

  beanstalkHost = process.env.BEANSTALK_HOST || '127.0.0.1';

  beanstalkPort = process.env.BEANSTALK_PORT || 11300;

  http = require('http');

  socket = require('socket.io-client')("http://" + insightHost + ":" + insightPort);

  dataAPIVersion = 1;

  beanstalkClient = require('nodestalker').Client("" + beanstalkHost + ":" + beanstalkPort);

  socket.on('connect', function() {
    console.log("socket client connected");
    socket.emit('subscribe', 'inv');
  });

  socket.on('disconnect', function() {
    console.log("socket client disconnected");
  });

  socket.on("tx", function(data) {
    var options, transactionTimestamp;
    transactionTimestamp = 0 + Date.now();
    options = {
      host: insightHost,
      port: insightPort,
      path: "/api/tx/" + data.txid
    };
    http.get(options, function(res) {
      var body;
      body = '';
      res.on('data', function(chunk) {
        body += chunk;
      }).on('end', function() {
        var txData;
        txData = JSON.parse(body);
        console.log("IN: " + txData.valueIn + ", OUT: " + txData.valueOut);
        data = {
          ver: dataAPIVersion,
          ts: transactionTimestamp,
          tx: txData
        };
        insertJobIntoBeanstalk('BTCTransactionJob', data);
      });
    }).on('error', function(e) {
      console.log("Got error: " + e.message);
    });
  });

  socket.on("block", function(data) {
    console.log("received block:", data);
  });

  insertJobIntoBeanstalk = function(jobType, data) {
    beanstalkClient.use('btctx').onSuccess(function() {
      beanstalkClient.put(JSON.stringify({
        job: "Tokenly\\XChainListener\\Job\\" + jobType,
        data: data
      })).onSuccess(function() {
        console.log("job loaded " + jobType + " (" + data.tx.txid + ")");
      }).onError(function() {
        return console.log("error loading job " + jobType + " (" + data.tx.txid + ")");
      });
    }).onError(function() {
      return console.log("error connecting to beanstalk");
    });
  };

  return;

}).call(this);
